// Generated by CoffeeScript 2.4.1

/*
All Mouselab-MDP trials will be demonstration trials
with data for the given participant. The coding is
CONDITION/PID and you can find the available codes
in exp1/static/json/data/1B.0/traces
*/
var CONDITION, DEBUG, DEMO, MIN_TIME, PARAMS, RETURN_TIME, SHOW_PARTICIPANT, SHOW_PARTICIPANT_DATA, STAGE, STAGE1, STAGE2, TALK, condition, with_feedback, workerId;

DEBUG = false;

TALK = false;

SHOW_PARTICIPANT = false;

STAGE = 1;

STAGE1 = STAGE === 1;

STAGE2 = STAGE === 2;

if (DEBUG) {
  console.log("X X X X X X X X X X X X X X X X X\n X X X X X DEBUG  MODE X X X X X\nX X X X X X X X X X X X X X X X X");
  condition = 1;
  workerId = ['debugFRED'];
} else {
  console.log("# =============================== #\n# ========= NORMAL MODE ========= #\n# =============================== #");
}

if (mode === "{{ mode }}") {
  // Viewing experiment not through the PsiTurk server
  DEMO = true;
  condition = 1;
  workerId = ['debugFRED'];
}

// counterbalance = 0
CONDITION = parseInt(condition);

_.mapObject = mapObject;

_.compose = _.flowRight;

//SHOW_PARTICIPANT_DATA = '0/108'
SHOW_PARTICIPANT_DATA = false;

with_feedback = CONDITION > 0;

PARAMS = {
  feedback: condition > 0,
  inspectCost: 1,
  condition: condition,
  bonusRate: .002,
  delay_hours: 24,
  delay_window: 4,
  time_limit: conditions.time_limits[condition % nrConditions],
  branching: '2_36',
  with_feedback: with_feedback,
  condition: CONDITION,
  startTime: Date(Date.now()),
};

RETURN_TIME = new Date(getTime() + 1000 * 60 * 60 * PARAMS.delay_hours);

MIN_TIME = 7;
