// Generated by CoffeeScript 2.4.1
/* jspsych-webppl.js
 * Fred Callaway
 */
jsPsych.plugins.webppl = (function() {
  var plugin;
  plugin = {};
  console.log('LOAD WEBPPL');
  plugin.trial = function(display_element, trial) {
    // if any trial variables are functions
    // this evaluates the function and replaces
    // it with the output of the function
    trial = jsPsych.pluginAPI.evaluateFunctionParameters(trial);
    display_element.html('');
    if (trial.file != null) {
      $.ajax({
        url: trial.file,
        async: false,
        dataType: 'text',
        success: function(code) {
          return trial.code = code;
        }
      });
    }
    // $.get trial.file, (code) ->
    //   async: false
    //   trial.code = code
    if (trial.code == null) {
      throw new Error('jspsych-webppl: No code or file provided!');
    }
    if (trial.globalStore == null) {
      trial.globalStore = {};
    }
    trial.globalStore.display_element = display_element;
    trial.globalStore.getKeyboardResponse = function(params, callback) {
      var default_params;
      default_params = {
        callback_function: callback,
        valid_responses: [],
        persist: false
      };
      params = _.extend(default_params, params);
      console.log('params', params);
      return jsPsych.pluginAPI.getKeyboardResponse(params);
    };
    if (trial.onFinish == null) {
      trial.onFinish = function(s, val) {
        return console.log(`webppl returned ${val}`);
      };
    }
    // delay 0, ->
    //   webppl.run webppl_code, ((s, val) ->
    //     console.log 'done running'
    //     # display_element.html(JSON.stringify(val))
    //     return
    //   ), initialStore: globals
    //   return
    // return
    return webppl.run(trial.code, trial.onFinish, {
      initialStore: trial.globalStore
    });
  };
  // display_element.click(do_thing)
  // jsPsych.pluginAPI.getKeyboardResponse
  // callback_function: do_thing
  // valid_responses: [ 'space' ]
  // persist: true
  // return
  return plugin;
})();
